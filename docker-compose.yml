version: "3"
services:
  openq-json-rpc-node:
    image: alo42/openq-json-rpc-node:latest
    container_name: ethnode
    ports:
      - "8545:8545"
  openq-contracts:
    container_name: openq-contracts
    depends_on:
      - openq-json-rpc-node
    build:
      dockerfile: Dockerfile
      context: ./OpenQ-Contracts
    volumes:
      - /app/node_modules
      - ./OpenQ-Contracts:/app
  openq-oracle:
    container_name: openq-oracle
    depends_on:
      - openq-json-rpc-node
      - openq-contracts
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-Oracle
    ports:
      - "8090:8090"
    env_file:
      - ./OpenQ-Contracts/.env
    volumes:
      - /app/node_modules
      - ./OpenQ-Oracle:/app
      - ./OpenQ-Contracts/artifacts:/app/artifacts
      - ./OpenQ-Contracts/addresses.json:/app/addresses/addresses.json
  openq-coinapi:
    container_name: openq-coinapi
    depends_on:
      - openq-json-rpc-node
      - openq-contracts
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-CoinAPI
    ports:
      - "8081:8081"
    volumes:
      - /app/node_modules
      - ./OpenQ-CoinAPI:/app
    env_file:
      - ./OpenQ-CoinAPI/.env
  openq-frontend:
    container_name: openq-frontend
    depends_on:
      - openq-json-rpc-node
      - openq-contracts
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-Frontend
    ports:
      - "3000:3000"
    env_file:
      - ./OpenQ-Contracts/.env
      - ./OpenQ-Frontend/.env
    volumes:
      - /app/node_modules
      - ./OpenQ-Frontend:/app
      - ./OpenQ-Contracts/artifacts:/app/artifacts
      - ./OpenQ-Contracts/addresses.json:/app/addresses/addresses.json
    entrypoint: ["yarn", "boot:${DEPLOY_ENV}"]
  github-oauth-server:
    container_name: github-oauth-server
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-Github-OAuth-Server
    env_file:
      - ./OpenQ-Github-OAuth-Server/.env
    ports:
      - "3001:3001"
    volumes:
      - /app/node_modules
      - ./OpenQ-Github-OAuth-Server:/app
  redis:
    container_name: redis
    image: redis:6.2.6-alpine
    ports: 
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
version: "3"
services:
  openq-json-rpc-node:
    image: openq/openq-json-rpc-node:latest
    container_name: ethnode
    hostname: ethnode
    ports:
      - "8545:8545"
  openq-contracts:
    container_name: openq-contracts
    depends_on:
      - openq-json-rpc-node
    build:
      dockerfile: Dockerfile
      context: ./OpenQ-Contracts
    volumes:
      - /app/node_modules
      - ./OpenQ-Contracts:/app
  openq-oracle:
    container_name: openq-oracle
    depends_on:
      - openq-json-rpc-node
      - openq-contracts
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-Oracle
    ports:
      - "8090:8090"
    env_file:
      - ./OpenQ-Contracts/.env
      - ./OpenQ-Oracle/.env
      - ./OpenQ-Contracts/.env.contracts
    volumes:
      - /app/node_modules
      - ./OpenQ-Oracle:/app
      - ./OpenQ-Contracts/artifacts:/app/artifacts
  # mongo:
  #   image: mongo
  #   restart: always
  #   ports:
  #     - 27017:27017
  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8089:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://mongo:27017
  openq-oz-claim-autotask:
    container_name: openq-oz-claim-autotask
    depends_on:
      - openq-json-rpc-node
      - openq-contracts
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-OZ-Claim-Autotask
    ports:
      - "8070:8070"
    volumes:
      - /app/node_modules
      - ./OpenQ-OZ-Claim-Autotask:/app
  openq-coinapi:
    container_name: openq-coinapi
    depends_on:
      - openq-json-rpc-node
      - openq-contracts
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-CoinAPI
    ports:
      - "8081:8081"
    volumes:
      - /app/node_modules
      - ./OpenQ-CoinAPI:/app
    env_file:
      - ./OpenQ-CoinAPI/.env
  openq-frontend:
    container_name: openq-frontend
    depends_on:
      - openq-json-rpc-node
      - openq-contracts
      - openq-api
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-Frontend
    ports:
      - "3000:3000"
    env_file:
      - ./OpenQ-Contracts/.env
      - ./OpenQ-Frontend/.env
      - ./OpenQ-Contracts/.env.contracts
    volumes:
      - /app/node_modules
      - ./OpenQ-Frontend:/app
      - ./OpenQ-Contracts/artifacts:/app/artifacts
    entrypoint: [ "yarn", "boot:${DEPLOY_ENV}" ]
  github-oauth-server:
    container_name: github-oauth-server
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-Github-OAuth-Server
    env_file:
      - ./OpenQ-Github-OAuth-Server/.env
    ports:
      - "3001:3001"
    volumes:
      - /app/node_modules
      - ./OpenQ-Github-OAuth-Server:/app
  redis:
    container_name: redis
    image: redis:6.2.6-alpine
    ports:
      - "6379:6379"
  openq_subgraph_deployer:
    container_name: openq_subgraph_deployer
    depends_on:
      - openq-json-rpc-node
      - openq-contracts
      - graph-node
    build:
      dockerfile: Dockerfile
      context: ./OpenQ-Graph
    volumes:
      - /app/node_modules
  graph-node:
    container_name: graph_node
    image: graphprotocol/graph-node
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      - ipfs
      - postgres
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      ethereum: 'mainnet:http://ethnode:8545'
      GRAPH_LOG: info
  ipfs:
    container_name: ipfs
    image: ipfs/go-ipfs:v0.4.23
    ports:
      - '5001:5001'
  postgres:
    image: postgres
    ports:
      - '5432:5432'
    command:
      [
        "postgres",
        "-cshared_preload_libraries=pg_stat_statements"
      ]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node  
  openq-api:
    container_name: openq-api
    depends_on:
      - openq_subgraph_deployer
      - openq-json-rpc-node
      - openq-contracts
      - openq-coinapi
      - graph-node
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-API
    env_file:
      - ./OpenQ-API/.env
    ports:
      - "4000:4000"
    volumes:
      - /app/node_modules
      - ./OpenQ-API:/app
